          </table>
        </td>
        <td valign="top">
          <div>
            <canvas id="bar"></canvas>
          </div>
          <p>&nbsp;</p>
          <p># of TLDs with &gt;1M domains: ::1M::<br/>
          # of TLDs with 100K - 1M domains: ::100K::<br/>
          # of TLDs with 10K - 100K domains: ::10K::<br/>
          # of TLDs with 1K - 10K domains: ::1K::<br/>
          # of TLDs with 100 - 1K domains: ::100::<br/>
          # of TLDs with &lt;100 domains: ::tens::</p>

          <p>
            <iframe src="/tldstats/topten.html" width="400" height="400" style="border:0"></iframe>
          </p>
        </td>
      </tr>
    </table>

    <p><a href="index.html">TLD Zone Stats</a></p>
    <hr style="width:100%; border-style:solid">
    <small>
    [<a href="/index.html">homepage</a>]&nbsp;
    [<a href="/blog/index.html">blog</a>]&nbsp;
    [<a href="mailto:jschauma@netmeister.org">jschauma@netmeister.org</a>]&nbsp;
    [<a href="https://mstdn.social/@jschauma/">@jschauma</a>]&nbsp;
    </small>

  <script src="./chart.js"></script>

  <script  type="text/javascript">
const data_bar = {
  labels: [
    '>1M domains',
    '100K - 1M domains',
    '10K - 100K domains',
    '1K - 10K domains',
    '100 - 1K domains',
    '<100 domains'
  ],
  data: [
    ::1M::,
    ::100K::,
    ::10K::,
    ::1K::,
    ::100::,
    ::tens::
  ]
}

const ctx_bar = document.getElementById('bar');
new Chart(ctx_bar, {
        type: 'bar',
        data: {
          labels: data_bar.labels,
          datasets: [{
            data: data_bar.data,
            backgroundColor: [
              'rgba(255, 99, 132, 0.2)',
              'rgba(255, 159, 64, 0.2)',
              'rgba(255, 205, 86, 0.2)',
              'rgba(75, 192, 192, 0.2)',
              'rgba(54, 162, 235, 0.2)',
              'rgba(153, 102, 255, 0.2)'
            ],
            borderColor: [
              'rgb(255, 99, 132)',
              'rgb(255, 159, 64)',
              'rgb(255, 205, 86)',
              'rgb(75, 192, 192)',
              'rgb(54, 162, 235)',
              'rgb(153, 102, 255)'
            ],
            borderWidth: 1
          }]
        },
        options: {
          plugins: {
            tooltip: {
              callbacks: {
                afterLabel: function(context) {
                    var sum = context.dataset.data.reduce((sum, item) => {
                      return sum + item;
                    }, 0);
                    var percent = context.dataset.data[context.dataIndex] / sum * 100;
                    percent = percent.toFixed(2);
                    return percent + '%';
                }
              }
            }
          }
        }
  });
  </script>
  </body>
</html>
